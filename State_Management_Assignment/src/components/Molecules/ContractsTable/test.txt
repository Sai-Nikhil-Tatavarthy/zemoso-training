import React, { useState } from "react";
import { makeStyles } from "@material-ui/core/styles";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Checkbox,
  Paper,
} from "@material-ui/core";

import "./style.css";

interface Row {
  id: number;
  Name: string;
  Type: string;
  "Per Payment": string;
  "Term length": string;
  Payment: string;
}

const rows: Row[] = [
  {
    id: 1,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 2,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 3,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 4,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 5,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 6,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 7,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
  {
    id: 8,
    Name: "Item 1",
    Type: "Monthly",
    "Per Payment": "12,000.25",
    "Term length": "12 months",
    Payment: "$126,722.64",
  },
];

interface Props {
  onSelectedRowsChange: (selected: number[]) => void;
}

function CheckboxTable(props: Props) {
  const [selected, setSelected] = useState<number[]>([]);
  const [selectAll, setSelectAll] = useState(false);
  // const handleSelectAll = (event: React.ChangeEvent<HTMLInputElement>) => {
  //   if (event.target.checked) {
  //     setSelectAll(true);
  //     setSelected(rows.map((row) => row.id));
  //   } else {
  //     setSelectAll(false);
  //     setSelected([]);
  //   }
  // };

  // const handleChange = (
  //   event: React.ChangeEvent<HTMLInputElement>,
  //   id: number
  // ) => {
  //   if (event.target.checked) {
  //     setSelected([...selected, id]);
  //   } else {
  //     setSelected(selected.filter((item) => item !== id));
  //   }
  //   setSelectAll(selected.length === rows.length);
  //   props.onSelectedRowsChange(selected);
  // };

  const isSelected = (id: number) => selected.indexOf(id) !== -1;
  return (
    <TableContainer component={Paper} className="tble_content">
      <Table aria-label="checkbox table">
        <TableHead>
          <TableRow>
            <TableCell padding="checkbox">
              <Checkbox
                checked={selectAll}
                onChange={handleSelectAll}
                indeterminate={
                  selected.length > 0 && selected.length < rows.length
                }
              />
            </TableCell>
            <TableCell>ID</TableCell>
            <TableCell>Name</TableCell>
            <TableCell>Type</TableCell>
            <TableCell>Per Payment</TableCell>
            <TableCell>Term length</TableCell>
            <TableCell>Payment</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map((row) => {
            const isRowSelected = isSelected(row.id);

            return (
              <TableRow
                key={row.id}
                className={isRowSelected ? "selected-row" : ""}
              >
                <TableCell padding="checkbox">
                  <Checkbox
                    checked={isRowSelected}
                    onChange={(event) => handleChange(event, row.id)}
                  />
                </TableCell>
                <TableCell component="th" scope="row">
                  {row.id}
                </TableCell>
                <TableCell>{row.Name}</TableCell>
                <TableCell>{row.Type}</TableCell>
                <TableCell>{row["Per Payment"]}</TableCell>
                <TableCell>{row["Term length"]}</TableCell>
                <TableCell>{row.Payment}</TableCell>
              </TableRow>
            );
          })}
        </TableBody>
      </Table>
    </TableContainer>
  );
}

export default CheckboxTable;
